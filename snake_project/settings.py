"""
Django settings for snake_project project.

Generated by 'django-admin startproject' using Django X.Y.Z.
For more information on this file, see
https://docs.djangoproject.com/en/X.Y/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/X.Y/ref/settings/
"""

from pathlib import Path
import os # Import os for environment variables if needed later

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/X.Y/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Replace this with a strong, unique key, preferably from an environment variable
SECRET_KEY = 'django-insecure-)p@_your_generated_secret_key_here_@#$'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True # Set to False in production

ALLOWED_HOSTS = [] # Add your domain/IP in production, e.g., ['yourdomain.com', '123.45.67.89']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third-party apps
    'rest_framework',
    'corsheaders',

    # Your apps
    'game_api.apps.GameApiConfig', # Or just 'game_api' if you don't have an AppConfig
]

MIDDLEWARE = [
    # CORS Middleware should be placed high, especially before CommonMiddleware if handling redirects
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware', # CSRF might not be needed for a stateless API, but included by default
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'snake_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'snake_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/X.Y/ref/settings/#databases
# Django needs this for its internal apps, even if your game logic uses MongoDB directly.
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/X.Y/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/X.Y/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC' # Keep as UTC internally; handle timezones on input/output if needed

USE_I18N = True

USE_TZ = True # Recommended to keep True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/X.Y/howto/static-files/

STATIC_URL = 'static/'
# Optional: If you have project-wide static files outside apps
# STATICFILES_DIRS = [ BASE_DIR / "static" ]

# Default primary key field type
# https://docs.djangoproject.com/en/X.Y/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Django REST Framework settings (optional, can add more later)
REST_FRAMEWORK = {
    # Add any default permission classes or authentication classes if needed
    # 'DEFAULT_PERMISSION_CLASSES': [
    #     'rest_framework.permissions.AllowAny',
    # ]
}

# CORS Headers configuration
# Option 1: Allow specific origins (Recommended for production)
CORS_ALLOWED_ORIGINS = [
    "http://localhost:8080",  # Example: Common port for 'python -m http.server'
    "http://localhost:3000",  # Example: Common port for React dev server
    "http://127.0.0.1:8000",  # Django default dev server
    "http://localhost:8000",  # Django default dev server
    "null",                   # Allow 'null' origin for local file:// access (often needed for testing index.html directly)
]

# Option 2: Allow all origins (Use only for local development if needed, less secure)
# CORS_ALLOW_ALL_ORIGINS = True # Set to True only if necessary during development

# Optional: Allow specific headers or methods if needed
# CORS_ALLOW_HEADERS = list(default_headers) + [...]
# CORS_ALLOW_METHODS = list(default_methods) + [...]

# Optional: If using CSRF and credentials with CORS
# CORS_ALLOW_CREDENTIALS = True
# CSRF_TRUSTED_ORIGINS = [ # Add frontend origins if using CSRF protection with credentials
#    "http://localhost:8080",
#    "http://localhost:3000",
# ]
